namespace Typesetting {
namespace Style {

    var keywordList_ = [
        "BEGIN",    "class",    "ensure",   "nil",      "self",     "when",
        "END",      "def",      "false",    "not",      "super",    "while",
        "alias",    "defined?", "for",      "or",       "then",     "yield",
        "and",      "do",       "if",       "redo",     "true",     "__LINE__",
        "begin",    "else",     "in",       "rescue",   "undef",    "__FILE__",
        "break",    "elsif",    "module",   "retry",    "unless",   "__ENCODING__",
        "case",     "end",      "next",     "return",   "until",
    ];

    Typesetting.Style.Code[__FILE__.stem()] = {
        theme: 'standard',
        pattern: [
            {
                name: "comment-single-line",
                pattern: /#.+/,
            },
            {
                name: "comment-multi-line",
                pattern: /=begin/,
                end: /=end/,
            },
            {
                name: "keyword",
                pattern: new Regex("\\b(%{keywordList_.join('|')})\\b"),
            },
            {
                name: "regex-literal",
                pattern: /\/(?:\\\/|.)*?\/[ioxmnesu]/,
            },
            {
                name: "string-literal",
                pattern: /"(?:\\"|.)*?"|'(?:\\'|.)*?\'/,
            },
            {
                name: "number",
                pattern: /0[0-7]*|[1-9][_0-9]*(?:\.[_0-9]+(?:[eE][-+][_0-9]+)?)?|0x[0-9a-fA-F][_0-9a-fA-F]*/,
            },
            {
                name: "function",
                pattern: /[\$_a-zA-Z][\$_a-zA-Z0-9]*(?=\()/,
            },
            {
                name: "variable-capital",
                pattern: /[\$_A-Z][\$_a-zA-Z0-9]*/,
            },
            {
                name: "variable",
                pattern: /[\$_a-z][\$_a-zA-Z0-9]*|_[1-9]/,
            },
        ],
    };

} # namespace Style
} # namespace Typesetting
