namespace Typesetting {
namespace Style {

    var keywordList_ = [
        "abstract",   "assert",      "boolean",   "break",      "byte",
        "case",       "catch",       "char",      "class",      "const",
        "continue",   "default",     "do",        "double",     "else",
        "enum",       "extends",     "final",     "finally",    "float",
        "for",        "goto",        "if",        "implements", "import",
        "instanceof", "int",         "interface", "long",       "native",
        "new",        "package",     "private",   "protected",  "public",
        "return",     "short",       "static",    "strictfp",   "super",
        "switch",     "synchrnized", "this",      "throw",      "throws",
        "transient",  "try",         "void",      "volatile",   "while",
    ];

    Typesetting.Style.Code[__FILE__.stem()] = {
        theme: 'standard',
        pattern: [
            {
                name: "comment-single-line",
                pattern: /\/\/.+|\/\*(.+?)\*\//,
            },
            {
                name: "comment-multi-line",
                pattern: /\/\*/,
                end: /\*\//,
            },
            {
                name: "keyword",
                pattern: new Regex("\\b(%{keywordList_.join('|')})\\b"),
            },
            {
                name: "string-literal",
                pattern: /"(?:\\"|.)*?"|'(?:\\'|.)*?\'/,
            },
            {
                name: "number",
                pattern: /0[0-7]*|[1-9][_0-9]*(?:\.[_0-9]+(?:[eE][-+][_0-9]+)?)?|0x[0-9a-fA-F][_0-9a-fA-F]*/,
            },
            {
                name: "function",
                pattern: /[\$_a-zA-Z][\$_a-zA-Z0-9]*(?=\()/,
            },
            {
                name: "variable-capital",
                pattern: /[\$_A-Z][\$_a-zA-Z0-9]*/,
            },
            {
                name: "variable",
                pattern: /[\$_a-z][\$_a-zA-Z0-9]*/,
            },
        ],
    };

} # namespace Style
} # namespace Typesetting
